name: Elixir CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    name: Build and test (Elixir ${{ matrix.elixir }} / OTP ${{ matrix.otp }} / Rust ${{ matrix.rust }})
    runs-on: ubuntu-24.04

    strategy:
      matrix:
        otp: ["27.2"]
        elixir: ["1.18.3"]
        rust: ["1.85.1"]

    env:
      MIX_ENV: test

    steps:
      - uses: actions/checkout@v3

      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          elixir-version: ${{ matrix.elixir }}
          otp-version: ${{ matrix.otp }}

      - name: Restore dependencies cache
        uses: actions/cache@v3
        with:
          path: deps
          key: ${{ runner.os }}-mix-${{ matrix.elixir }}-${{ matrix.otp }}-${{ hashFiles('**/mix.lock') }}
          restore-keys: ${{ runner.os }}-mix-${{ matrix.elixir }}-${{ matrix.otp }}-

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
          components: rustfmt, clippy

      - name: Install system dependencies for V8
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential pkg-config libssl-dev \
            libglib2.0-dev libglib2.0-0 libgtk-3-dev \
            libatk1.0-dev libatk-bridge2.0-dev libgdk-pixbuf2.0-dev \
            libpango1.0-dev libcairo2-dev libnss3-dev libxss-dev

      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v2
        with:
          shared-key: "rust-${{ matrix.elixir }}-${{ matrix.otp }}-${{ matrix.rust }}"

      - name: Install dependencies
        run: mix deps.get

      - name: Compile
        run: mix compile --warnings-as-errors
        timeout-minutes: 10

      - name: Check formatting
        run: mix format --check-formatted
